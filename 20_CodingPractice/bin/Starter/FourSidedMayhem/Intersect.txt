public static boolean intersect(Line l1, Line l2) {
  int test1 , test2;
  test1 = counterClockwiseTurn(l1.getPoint1(),
                               l1.getPoint2(), 
                               l2.getPoint1()) 
        * counterClockwiseTurn(l1.getPoint1(), 
                               l1.getPoint2(),
                               l2.getPoint2());

  test2 = counterClockwiseTurn(l2.getPoint1(),
                               l2.getPoint2(),
                               l1.getPoint1()) 
        * counterClockwiseTurn(l2.getPoint1(),
                               l2.getPoint2(),
                               l1.getPoint2());
  return (test1 <= 0) && (test2 <= 0);
}

private static int counterClockwiseTurn
                        (Point a, Point b, Point c) {
  double area2 = (b.getX() - a.getX()) 
               * (c.getY() - a.getY()) 
    		     - (b.getY() - a.getY()) 
               * (c.getX() - a.getX());
  if (area2 < 0)      //clockwise turn
    return -1;
  else if (area2 > 0) //counter clockwise turn
    return +1;
  else                //no turn (collinear)
    return 0;
}
